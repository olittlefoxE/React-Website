{"version":3,"file":"static/js/631.770d74c2.chunk.js","mappings":"iJAEA,MAAMA,EAAqBA,CAACC,EAAOC,EAAUC,KAC3C,GAAc,KAAVF,GAAgBG,MAAMH,GAAQ,MAAO,GAEzC,MAAMI,EAAOC,WAAWL,GAExB,IAAIM,EACJ,OAAQL,GACN,IAAK,UACHK,EAAUF,EACV,MACF,IAAK,aACHE,EAAyB,EAAI,GAAlBF,EAAO,IAClB,MACF,IAAK,SACHE,EAAUF,EAAO,OACjB,MACF,QACE,MAAO,GAGX,OAAQF,GACN,IAAK,UACH,OAAOI,EACT,IAAK,aACH,OAAkB,EAAVA,EAAe,EAAI,GAC7B,IAAK,SACH,OAAOA,EAAU,OACnB,QACE,MAAO,GACX,EA4FF,EAzF8BC,KAC5B,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,YACpCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,eACtCK,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,IAyBrC,OACEO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yEAAwEC,SAAA,EACrFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sEAAqEC,SAAC,2BAGpFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,6DAA4DC,SAAC,oBAG9EC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLrB,MAAOQ,EACPc,SAnCmBC,IACzB,MAAMvB,EAAQuB,EAAEC,OAAOxB,MACvBS,EAAcT,GACdgB,EAAUjB,EAAmBC,EAAOW,EAAWE,GAAY,EAiCrDY,YAAY,cACZP,UAAU,+EAGdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,6DAA4DC,SAAC,mBAG9EF,EAAAA,EAAAA,MAAA,UACEjB,MAAOW,EACPW,SAxCuBC,IAC7B,MAAMvB,EAAQuB,EAAEC,OAAOxB,MACvBY,EAAaZ,GACbgB,EAAUjB,EAAmBS,EAAYR,EAAOa,GAAY,EAsCtDK,UAAU,yEAAwEC,SAAA,EAElFC,EAAAA,EAAAA,KAAA,UAAQpB,MAAM,UAASmB,SAAC,aACxBC,EAAAA,EAAAA,KAAA,UAAQpB,MAAM,aAAYmB,SAAC,gBAC3BC,EAAAA,EAAAA,KAAA,UAAQpB,MAAM,SAAQmB,SAAC,kBAG3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,6DAA4DC,SAAC,iBAG9EF,EAAAA,EAAAA,MAAA,UACEjB,MAAOa,EACPS,SAhDwBC,IAC9B,MAAMvB,EAAQuB,EAAEC,OAAOxB,MACvBc,EAAcd,GACdgB,EAAUjB,EAAmBS,EAAYG,EAAWX,GAAO,EA8CrDkB,UAAU,yEAAwEC,SAAA,EAElFC,EAAAA,EAAAA,KAAA,UAAQpB,MAAM,UAASmB,SAAC,aACxBC,EAAAA,EAAAA,KAAA,UAAQpB,MAAM,aAAYmB,SAAC,gBAC3BC,EAAAA,EAAAA,KAAA,UAAQpB,MAAM,SAAQmB,SAAC,kBAG3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,uCAAsCC,SAAA,CAAC,WACzCJ,QAGbK,EAAAA,EAAAA,KAAA,UACEM,QAxDcC,KAClBlB,EAAc,IACdO,EAAU,GAAG,EAuDTE,UAAU,oDAAmDC,SAC9D,YAGG,C","sources":["components/projects/extTemperatureCalculator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst convertTemperature = (value, fromUnit, toUnit) => {\r\n  if (value === \"\" || isNaN(value)) return \"\";\r\n\r\n  const temp = parseFloat(value);\r\n\r\n  let celsius;\r\n  switch (fromUnit) {\r\n    case \"Celsius\":\r\n      celsius = temp;\r\n      break;\r\n    case \"Fahrenheit\":\r\n      celsius = (temp - 32) * (5 / 9);\r\n      break;\r\n    case \"Kelvin\":\r\n      celsius = temp - 273.15;\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n\r\n  switch (toUnit) {\r\n    case \"Celsius\":\r\n      return celsius;\r\n    case \"Fahrenheit\":\r\n      return (celsius * 9) / 5 + 32;\r\n    case \"Kelvin\":\r\n      return celsius + 273.15;\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nconst TemperatureCalculator = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [inputUnit, setInputUnit] = useState(\"Celsius\");\r\n  const [outputUnit, setOutputUnit] = useState(\"Fahrenheit\");\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setInputValue(value);\r\n    setResult(convertTemperature(value, inputUnit, outputUnit));\r\n  };\r\n\r\n  const handleInputUnitChange = (e) => {\r\n    const value = e.target.value;\r\n    setInputUnit(value);\r\n    setResult(convertTemperature(inputValue, value, outputUnit));\r\n  };\r\n\r\n  const handleOutputUnitChange = (e) => {\r\n    const value = e.target.value;\r\n    setOutputUnit(value);\r\n    setResult(convertTemperature(inputValue, inputUnit, value));\r\n  };\r\n\r\n  const resetFields = () => {\r\n    setInputValue(\"\");\r\n    setResult(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md max-w-sm mx-auto\">\r\n      <h1 className=\"text-xl font-bold mb-4 text-center text-gray-800 dark:text-gray-200\">\r\n        Temperature Converter\r\n      </h1>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n          Starting Value\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter value\"\r\n          className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:text-gray-200\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n          Starting Unit\r\n        </label>\r\n        <select\r\n          value={inputUnit}\r\n          onChange={handleInputUnitChange}\r\n          className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:text-gray-200\"\r\n        >\r\n          <option value=\"Celsius\">Celsius</option>\r\n          <option value=\"Fahrenheit\">Fahrenheit</option>\r\n          <option value=\"Kelvin\">Kelvin</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n          Result Unit\r\n        </label>\r\n        <select\r\n          value={outputUnit}\r\n          onChange={handleOutputUnitChange}\r\n          className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:text-gray-200\"\r\n        >\r\n          <option value=\"Celsius\">Celsius</option>\r\n          <option value=\"Fahrenheit\">Fahrenheit</option>\r\n          <option value=\"Kelvin\">Kelvin</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"text-center mb-4\">\r\n        <p className=\"text-lg font-bold dark:text-gray-300\">\r\n          Result: {result}\r\n        </p>\r\n      </div>\r\n      <button\r\n        onClick={resetFields}\r\n        className=\"w-full bg-red-600 text-white px-4 py-2 rounded-md\"\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemperatureCalculator;\r\n\r\n"],"names":["convertTemperature","value","fromUnit","toUnit","isNaN","temp","parseFloat","celsius","TemperatureCalculator","inputValue","setInputValue","useState","inputUnit","setInputUnit","outputUnit","setOutputUnit","result","setResult","_jsxs","className","children","_jsx","type","onChange","e","target","placeholder","onClick","resetFields"],"sourceRoot":""}